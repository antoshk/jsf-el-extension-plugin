<idea-plugin>
    <id>com.antoshk.jsf-el-extension-plugin</id>
    <name>JSF-EL-extension</name>
    <vendor email="anton.shelkovich@gmail.com">Anton Shelkovich</vendor>

    <description><![CDATA[
    Allows to see autocompletion for enums in JSF EL.<br>
    By default enums are not supported by JSF EL, but it's possible to use them with extension libraries like PrimeFaces.
    Even in that case there is no autocompletion support for enum names and constants. This plugin adds this support.<br>
    To use it you have to create enumPlugin.properties file somewhere in project and put there enum descriptions
    in format: enumName = enum.full.class.Name<br>
    Typing enumName will trigger autocompletion of enum name and enum.full.class.Name will allow to find enum constants.
    <br><br>
    Also if enum constants contain constructor arguments (usually used for description) they will be shown in
    suggestion description.
    It's a basic functionality. You are free to improve it by pull requests.
    ]]></description>

    <change-notes><![CDATA[
    <ul>
        <li>Annotations added. Although enums and their constants still marked like unresolved variables by bundled JSF plugin, now valid
        enums shown cursive, valid constants additionally marked like constant and invalid ones underlined like something invalid</li>
    </ul>
    ]]>
    </change-notes>

    <idea-version since-build="181" until-build="183.*"/>

    <depends>com.intellij.properties</depends>
    <depends>com.intellij.modules.ultimate</depends>

    <extensions defaultExtensionNs="com.intellij">
        <psi.referenceContributor implementation="com.antoshk.psi.EnumReferenceContributor"/>
        <completion.contributor language="EL" implementationClass="com.antoshk.ElCompletionContributor" order="first"/>
        <annotator language="EL" implementationClass="com.antoshk.EnumAnnotator" order="last"/>
    </extensions>

    <actions>
    </actions>
</idea-plugin>